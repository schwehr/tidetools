tideResample (formally tideInterp and tideDownsample) samples a tide data file to find the modal time increment and then either interpolates or downsamples the data file. Both actions use straight line interpolation to create new data points.

If you specify a new time interval that is greater than in the source data file, the source data points are used to specify a line equation using least squares fit, and the new point is found by solving for the new time.

If you specify an interval time that is equal to or less than the modal time (or do not specify a new interval), straight line interpolation is done between the input data points for any time intervals without data.
Contents
 [hide] 

    1 The Tools
    2 Command Line Options and Arguments
    3 Down Sampling
    4 Down Sampling Algorithm

[edit] The Tools

    tideConvert - to generate water level in a standard format from recorded data
    tidePlot - to visually check the result and see any significant data gaps
    tideTrim - to remove outliers
    tideFilter - to smooth the data
    tidePeaks - analysis for offsets and scale
    tideResample - interpolates and downsamples (under development and testing) 

[edit] Command Line Options and Arguments
Short 	Long 	Type 	Default 	Description
-i 	--input-files 	[path/]filename 	None 	

Which files to process. This option may be used more than once. Command line arguements will be interpreted as input file names. If there is no input specified either as an option or as an argument, STDIN will be used for input. (Path is optional.)
-I 	--InputFormat 	One of:
caris
matlab
UNIXepoch
	caris 	time format for output

caris
    YY/mm/dd HH:MM:SS.sss 
matlab
    YY mm dd HH MM SS.sss 
UNIXepoch
    SSSSSSSS.ss 

-o 	--outputFile 	filename 	None 	

The file to write the output to. If no file is specified, the output will go to STDOUT.
-O 	--outputFormat 	One of:
caris
matlab
UNIXepoch
	caris 	time format for output

caris
    YY/mm/dd HH:MM:SS.sss 
matlab
    YY mm dd HH MM SS.sss 
UNIXepoch
    SSSSSSSS.ss 

-S 	--StartTime 	timeString 	00:00:00 	

HH:MM:SS for starting point of output data
-T 	--Tinterval 	timeString 	00:06:00 	

HH:MM:SS for interval of output
-R 	--Report 	filename 	None 	

filename for report of points added to data
-s 	--maxSamples 	number 	500 	

the maximum number of entries to sample to determine the modal time interval
-v 	--verbose 	flag 	False 	

Run with status output to stderr


[edit] Down Sampling

Down sampling solves two problems:

1. Tide data records must conform to specifications, e.g., data must be recorded for every six minutes on the minute starting at the top of the hour (00:00:00, 00:06:00, 00:12:00, etc.). The actual sampling may have occurred at every two minutes and one second starting at some fractional minute (00:01:15, 00:03:16, 00:05:17, 00:07:18, etc.). The down sampling will take this out of sync and higher sample rate data and convert it to a data set that conforms to the specification.

2. High resolution tidal data, such as that generated by a microwave tide station, can appear to be very noisy. Down sampling shows a smoother curve that, unlike low pass filtering, shows a corresponding lower time resolution. This is a sort-of two dimensional smoothing.
A detail of the downsampling. The blue line is the original data with a high frequency of sampling. The red line is the new, lower frequency sampling. The dots on the lines represent the sample times. Notice the averaging (smoothing) that occurs from downsampling. (Click on the image to see a closeup.)
[edit] Down Sampling Algorithm

(See the corresponding figures, below.)

1. As the data is read in

2. A list of the new output-times is generated based on the start-time and time interval specified on the command line

3. The new sample time segment spans from midway back to previous output time and forward to midway to the next output time. (See figure 3.) The input data (original time interval) is evaluated within the time-segment.

4. A least squares fit line (lsf-line) is calculated from the time-segment sample. (The derived lines for the series of time-segments do not form a continuous curve. These lines are used only to determine an interpolated value for each output time.)

5. The output value for the new time is found by interpolating the lsf-line at the new (output) time.

Down sampling does not work unless the new time interval is greater than the original time interval. In other words, there must be two or more samples of original data for each value output. (That is why it is called downsampling.) Be aware that, like low pass filters, data is lost at the beginning and the end of the original data set.
Process of Down Sampling
Figure 1. The source data (original sampling rate)
	
Figure 2. Times for new samples
Figure 3. Ranges of data used for new points
	
Figure 4. Least squares fit for data within each range
Figure 5. Interpolated values (circles) at intersection of least squares and new sample time
	

 
Examples of Interpolation
Data before interpolation. Notice the gaps in the data. (Click on the image to zoom in for detail.)
	
A detail of the data before interpolation. (Click on the image to zoom in for detail.)
Data after interpolation. Notice the gaps are now filled in the data. (Click on the image to zoom in for detail.)
	
A detail of the data after interpoloation. (Click on the image to zoom in for detail.)
