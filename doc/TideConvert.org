#+TITLE:  tideConvert

The program tideConvert takes Anderra tide gauge data in several different formats and produces a Date Time WaterLevel record for every valid data line in the Anderra log.

*  Algorithm

The conversion from the tide guage formats (there are many different ones) is not a simple process because it relies on pattern recognition via the software tool "regular expressions". However, once the patterns are recognized and the values are converted from strings of digits to numeric values, the data conversion and reformating is fairly straight forward.

If the recorded data is raw pressure, we use the formula:

TideConvert formula.gif

WL
	

water level in meters

N
	

raw pressure in kPa

A
	

-1.008e-01

B
	

5.125e-03

C
	

7.402e-08

D
	

0.000

datumOffset
	

meters below datum
*  Input Formats

The input formats are selected with the -I. The choices are:

SNTT 
    Raw Input 
DTWL 
    Date-Time WaterLevel 
TVWL 
    Time WaterLevel Temperature (JEL tide gauge) 

*  Raw Input

A raw data format consists of a timestamp, pressure, and temperature. For example:

# START LOGGING UTC seconds since the epoch: 1213488002.45
# SPEED:       9600
# PORT:        /dev/ttyS0
# TIMEOUT:     300.0
# STATIONID:   memma
# DAEMON MODE: True
635  711  427,rmemma,1213488014.57
635  711  427,rmemma,1213488026.7
635  711  427,rmemma,1213488038.83
635  712  427,rmemma,1213488050.95
635  712  426,rmemma,1213488063.08
635  712  426,rmemma,1213488075.21
635  712  426,rmemma,1213488087.33

time, pressure, and temperature are converted to time, water_level.


*  Date-Time WaterLevel

Select this format with the -I DTWL option.

The format looks like this:

<code lang=text>
2007/06/01 00:00:00    1.18   0.008
2007/06/01 00:06:00    1.23   0.007
2007/06/01 00:12:00    1.28   0.007
2007/06/01 00:18:00    1.34   0.009
2007/06/01 00:24:00    1.41   0.009

</code>

*  Time WaterLevel Temperature

This is the format used at the JEL tide gauge during the summer of 2009

Select this format with the -I TVWL option.

This format has the date only at the begining of each day. Each reading then shows the time (without the date). The format looks like this:

<code lang=text>
Time/Date :   8 July-2009 16:53:00
Time   BattVolt Ch002    Ch003    
16:53     10.2    377.0    576.0  
16:53     10.2    377.0    576.0  
16:54     10.2    378.0    576.0  
16:54     10.2    378.0    576.0  

</code>


*  Typical Output (caris time format)

2007/06/01 00:00:00    1.18 
2007/06/01 00:06:00    1.23 
2007/06/01 00:12:00    1.28 
2007/06/01 00:18:00    1.34 
2007/06/01 00:24:00    1.41 
2007/06/01 00:30:00    1.48 
2007/06/01 00:36:00    1.55
2007/06/01 00:42:00    1.62

*  Command Line Options and Arguments
#+BEGIN_SRC sh
Usage: tideConvert.py [options] tide files

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -i INPUTFILES, --input-files=INPUTFILES
                        What files to read from [default: [] - stdin if None]
  -I INPUTFORMAT, --InputFormat=INPUTFORMAT
                        Input time format. One of: CDL, SNTT, DTWL, TVWL
                        [default: SNTT]
  -o OUTFILENAME, --output-file=OUTFILENAME
                        What filename to write to [default: none - stdout if
                        None]
  -O TIMEFORMAT, --OutputFormat=TIMEFORMAT
                        Output time format. One of: caris, matlab, UNIXepoch
                        [default: caris]
  -B BADLINEFILE, --BadLineFile=BADLINEFILE
                        Place unparseable lines in a file for review [default:
                        None]
  -t TIMESHIFT, --timeshift=TIMESHIFT
                        in seconds.  You will need to shift time for data from
                        2008-06-15 and older by +/- 45 seconds [default: 0]
  -v, --verbose         run the tests run in verbose mode
  -D DATUMOFFSET, --datum-offset=DATUMOFFSET
                        Distance from the sensor up to the datum offset in
                        meters (negative is below the sensor) [default: 0]
  --FieldSeparator=FIELDSEP
                        the character(s) used to separate fields in files;
                        [default '\t']
  --RecordSeparator=RECSEP
                        the character(s) used to separate records in the
                        files; [default '\n']
#+END_SRC
